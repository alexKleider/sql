# My notes as to db design

Field types: TEXT INTEGER REAL NUMERIC BLOB NULL 
#  RDB: A set of tables of rows (records) and columns (fields) #
#  where a cell in one table may refer to a row in another.    #
Link table rows together ==> relationships
Data Definition Language (DDL): db specific (CREATE, DROP(destroy))
Data Manipulation Language (DML): more standardised (INSERT,
SELECT, UPDATE, DELETE, etc)
INSERT INTO tablename ( column1, column2... ) VALUES ( value1, value2... );

Expresses required outcome (vs how)
    SELECT columns FROM tables
    WHERE expression
    ORDER BY columns;

    UPDATE tablename
    SET column = value
    WHERE condition;

Note: cross table join: SELECT .. WHERE .. AND ..  (faster)
    vs nested SELECT

Tables: (a cell in one may refer to a row in another)
    People
        PersonID, first,last,suffix, phone,address,
        town, state,postal_code,country,email
    Members
        MemberID UNIQUE, PersonID
    Applicants
        memberID INTEGER PRIMARY KEY
    Stati
        StatusID, description, symbol
    Person_status
        personID, statusID
    Applicant_Sponsor
        applicantID, sponsorID
    Applicant_Dates
        personID UNIQUE, received, fee_paid, meeting1, meeting2,
        meeting3, approved, inducted
    Dues
        personID (UNIQUE), balance
    Dock
        personID (UNIQUE), balance
    Mooring_Sites
        MooringID, fee
    ??? can one person have more than one Kayak slot or mooring?
    Kayak
        personID (UNIQUE), balance
    Mooring
        personID (UNIQUE), mooringSiteID, balance

Relationships:
    Each applicant (and some members, former applicants)
        have up to 2 sponsors
        have an entry in Applicant_Date table

    Each member may have entries in
        Dock, Kayak &/or Mooring tables
    Each member and each applicant may have any number of stati
